version: '3'

services:
  postal:
    image: ghcr.io/postalserver/postal:latest
    container_name: postal
    restart: always
    networks:
      - coolify
    ports:
      - '25:25'
      - '465:465'
      - '587:587'
      - '5000:5000'
    volumes:

      - /data/postal/postal.yml:/config/postal.yml
      - postal_data:/opt/postal/storage 
    environment:
      # General Postal Settings
      POSTAL_WEB_HOSTNAME: ${POSTAL_WEB_HOSTNAME} 
      POSTAL_WEB_PROTOCOL: https
      POSTAL_SMTP_HOSTNAME: ${POSTAL_SMTP_HOSTNAME} 
      MAIN_DB_HOST: ${MAIN_DB_HOST}
      MAIN_DB_PORT: ${MAIN_DB_PORT} 
      MAIN_DB_DATABASE: postal
      MAIN_DB_USERNAME: ${MAIN_DB_USERNAME}
      MAIN_DB_PASSWORD: ${MAIN_DB_PASSWORD}
      POSTAL_RABBITMQ_HOST: postal-rabbitmq
      POSTAL_RABBITMQ_USERNAME: ${POSTAL_RABBITMQ_USERNAME} 
      POSTAL_RABBITMQ_PASSWORD: ${POSTAL_RABBITMQ_PASSWORD} 
      POSTAL_RABBITMQ_VHOST: /postal
      RAILS_SECRET_KEY: ${RAILS_SECRET_KEY} 
      POSTAL_SMTP_PORT: 25 
                      

    entrypoint: |
      bash -c '
      echo "Waiting for RabbitMQ..."
      while ! nc -z postal-rabbitmq 5672; do sleep 1; done
      echo "Waiting for MariaDB..."
      while ! nc -z ${MARIADB_CONTAINER} ${MARIADB_PORT}; do sleep 1; done # MARIADB_PORT should be 3306
      echo "Running database initialization..."
      if [ -f /config/postal.yml ]; then
        echo "INFO: Found /config/postal.yml. Settings from this file will take precedence over environment variables for conflicting keys."
      else
        echo "INFO: No /config/postal.yml found. Relying on environment variables for configuration."
      fi
      postal initialize || exit 1
      echo "Starting web server..."
      postal web-server'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postal-rabbitmq

  postal-worker:
    image: ghcr.io/postalserver/postal:latest
    container_name: postal-worker
    restart: always
    networks:
      - coolify
    volumes:
      - /data/postal/postal.yml:/config/postal.yml
    environment:
      # General Postal Settings
      POSTAL_WEB_HOSTNAME: ${POSTAL_WEB_HOSTNAME}
      POSTAL_WEB_PROTOCOL: https
      POSTAL_SMTP_HOSTNAME: ${POSTAL_SMTP_HOSTNAME}

      MAIN_DB_HOST: ${MAIN_DB_HOST}
      MAIN_DB_PORT: ${MAIN_DB_PORT} 
      MAIN_DB_DATABASE: postal
      MAIN_DB_USERNAME: ${MAIN_DB_USERNAME}
      MAIN_DB_PASSWORD: ${MAIN_DB_PASSWORD}

      # RabbitMQ Connection
      POSTAL_RABBITMQ_HOST: postal-rabbitmq
      POSTAL_RABBITMQ_USERNAME: ${POSTAL_RABBITMQ_USERNAME}
      POSTAL_RABBITMQ_PASSWORD: ${POSTAL_RABBITMQ_PASSWORD}
      POSTAL_RABBITMQ_VHOST: /postal

      # Rails Secret Key
      RAILS_SECRET_KEY: ${RAILS_SECRET_KEY}

      POSTAL_SMTP_PORT: 25

    entrypoint: |
      bash -c '
      echo "Waiting for postal web (main postal service)..."
      while ! nc -z postal 5000; do sleep 1; done
      echo "Waiting for RabbitMQ..."
      while ! nc -z postal-rabbitmq 5672; do sleep 1; done
      echo "Waiting for MariaDB..."
      while ! nc -z ${MARIADB_CONTAINER} ${MARIADB_PORT}; do sleep 1; done # MARIADB_PORT should be 3306
      if [ -f /config/postal.yml ]; then
        echo "INFO (worker): Found /config/postal.yml."
      else
        echo "INFO (worker): No /config/postal.yml found. Relying on environment variables."
      fi
      echo "Starting worker..."
      postal worker'
    depends_on:
      - postal # Depends on the main postal service to be somewhat up
      - postal-rabbitmq # Also directly depends on rabbitmq

  postal-rabbitmq:
    image: rabbitmq:3.8-management # Consider updating to a more recent RabbitMQ version if compatible
    container_name: postal-rabbitmq
    networks:
      - coolify
    volumes:
      - postal_rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER} # Use the var from .env
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS} # Use the var from .env
      RABBITMQ_DEFAULT_VHOST: /postal # Postal expects this vhost
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  coolify:
    external: true

volumes:
  postal_data:
  postal_rabbitmq_data:
