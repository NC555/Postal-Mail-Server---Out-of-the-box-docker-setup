version: '3'
services:
  postal:
    image: ghcr.io/postalserver/postal:latest
    container_name: postal-xko0wc0kg0c44ggg88cg0ck4
    restart: always
    networks:
      - coolify
    ports:
      - '25:25'
      - '465:465'
      - '587:587'
      - '5000:5000'
    volumes:
      - /data/postal/postal.yml:/config/postal.yml
      - postal_data:/opt/postal/storage
    environment:
      POSTAL_WEB_HOSTNAME: ${POSTAL_WEB_HOSTNAME}
      POSTAL_WEB_PROTOCOL: https
      POSTAL_SMTP_HOSTNAME: ${POSTAL_SMTP_HOSTNAME}
      MAIN_DB_HOST: ${MAIN_DB_HOST}
      MAIN_DB_PORT: ${MAIN_DB_PORT} 
      MAIN_DB_DATABASE: postal
      MAIN_DB_USERNAME: ${MAIN_DB_USERNAME}
      MAIN_DB_PASSWORD: ${MAIN_DB_PASSWORD}
      POSTAL_RABBITMQ_HOST: postal-rabbitmq
      POSTAL_RABBITMQ_USERNAME: ${POSTAL_RABBITMQ_USERNAME}
      POSTAL_RABBITMQ_PASSWORD: ${POSTAL_RABBITMQ_PASSWORD}
      POSTAL_RABBITMQ_VHOST: /postal
      RAILS_SECRET_KEY: ${RAILS_SECRET_KEY}

      POSTAL_SMTP_PORT: 25

      
    entrypoint: |
      bash -c '
      set -ex # Exit on error, print commands for debugging

      echo "SCRIPT: Starting entrypoint script..."

      echo "SCRIPT: Waiting for RabbitMQ (postal-rabbitmq-xko0wc0kg0c44ggg88cg0ck4:5672)..."
      while ! nc -z postal-rabbitmq-xko0wc0kg0c44ggg88cg0ck4 5672; do
        echo "SCRIPT: Still waiting for RabbitMQ...";
        sleep 1;
      done
      echo "SCRIPT: RabbitMQ is up."

      echo "SCRIPT: Waiting for MariaDB (maria-db-server-kgws4w40k48ogswo80gsoos0:3306)..."
      while ! nc -z maria-db-server-kgws4w40k48ogswo80gsoos0 3306; do
        echo "SCRIPT: Still waiting for MariaDB...";
        sleep 1;
      done
      echo "SCRIPT: MariaDB is up."

      echo "SCRIPT: Checking for /config/postal.yml..."
      if [ -f /config/postal.yml ]; then
        echo "SCRIPT: INFO: Found /config/postal.yml. Settings from this file will take precedence."
        echo "SCRIPT: --- Begin /config/postal.yml content ---"
        cat /config/postal.yml # Print the config file content to logs
        echo "SCRIPT: --- End /config/postal.yml content ---"
      else
        echo "SCRIPT: INFO: No /config/postal.yml found. Using environment variables."
      fi

      echo "SCRIPT: Attempting to run postal initialize..."
      postal initialize
      INITIALIZE_EXIT_CODE=$? # Capture the exit code
      echo "SCRIPT: postal initialize finished with exit code $INITIALIZE_EXIT_CODE."

      if [ $INITIALIZE_EXIT_CODE -ne 0 ]; then
        echo "SCRIPT: ERROR: postal initialize failed with exit code $INITIALIZE_EXIT_CODE. Exiting."
        exit 1
      fi

      echo "SCRIPT: Attempting to start web server with: exec postal web-server"
      # The "exec" command replaces the current shell process with the postal web-server process.
      # If this works, you should see Puma startup messages after this line.
      exec postal web-server
      
      # The lines below should NOT be reached if "exec postal web-server" is successful.
      echo "SCRIPT: ERROR: exec postal web-server seems to have exited or failed to launch. This should not happen."
      exit 1 
      '
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postal-rabbitmq

  postal-worker:
    image: ghcr.io/postalserver/postal:latest
    container_name: postal-worker
    restart: always
    networks:
      - coolify
    volumes:
      - /data/postal/postal.yml:/config/postal.yml
    environment:
      # General Postal Settings
      POSTAL_WEB_HOSTNAME: ${POSTAL_WEB_HOSTNAME}
      POSTAL_WEB_PROTOCOL: https
      POSTAL_SMTP_HOSTNAME: ${POSTAL_SMTP_HOSTNAME}

      MAIN_DB_HOST: ${MAIN_DB_HOST}
      MAIN_DB_PORT: ${MAIN_DB_PORT} 
      MAIN_DB_DATABASE: postal
      MAIN_DB_USERNAME: ${MAIN_DB_USERNAME}
      MAIN_DB_PASSWORD: ${MAIN_DB_PASSWORD}

      # RabbitMQ Connection
      POSTAL_RABBITMQ_HOST: postal-rabbitmq
      POSTAL_RABBITMQ_USERNAME: ${POSTAL_RABBITMQ_USERNAME}
      POSTAL_RABBITMQ_PASSWORD: ${POSTAL_RABBITMQ_PASSWORD}
      POSTAL_RABBITMQ_VHOST: /postal

      # Rails Secret Key
      RAILS_SECRET_KEY: ${RAILS_SECRET_KEY}

      POSTAL_SMTP_PORT: 25

    entrypoint: |
      bash -c '
      echo "Waiting for postal web (main postal service)..."
      while ! nc -z postal 5000; do sleep 1; done
      echo "Waiting for RabbitMQ..."
      while ! nc -z postal-rabbitmq 5672; do sleep 1; done
      echo "Waiting for MariaDB..."
      while ! nc -z ${MARIADB_CONTAINER} ${MARIADB_PORT}; do sleep 1; done # MARIADB_PORT should be 3306
      if [ -f /config/postal.yml ]; then
        echo "INFO (worker): Found /config/postal.yml."
      else
        echo "INFO (worker): No /config/postal.yml found. Relying on environment variables."
      fi
      echo "Starting worker..."
      postal worker'
    depends_on:
      - postal # Depends on the main postal service to be somewhat up
      - postal-rabbitmq # Also directly depends on rabbitmq

  postal-rabbitmq:
    image: rabbitmq:3.8-management # Consider updating to a more recent RabbitMQ version if compatible
    container_name: postal-rabbitmq
    networks:
      - coolify
    volumes:
      - postal_rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER} # Use the var from .env
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS} # Use the var from .env
      RABBITMQ_DEFAULT_VHOST: /postal # Postal expects this vhost
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  coolify:
    external: true

volumes:
  postal_data:
  postal_rabbitmq_data:
